// Get all the <span> elements inside the container with class name "top_tags"
const topTags = document.getElementById('Topkeywords').querySelectorAll('span');

// Extract the text content of each <span> element and split into two columns: text and numbers
const topTagsData = Array.from(topTags)
  .map(tag => {
    const text = tag.textContent.trim();
    const textWithoutParentheses = text.replace(/[()]/g, '').trim();
    const num = textWithoutParentheses.match(/\d+/);
    const textWithoutNum = textWithoutParentheses.replace(/\d+/, '').trim();
    return `${textWithoutNum},${num || ''}`;
  })
  .join('\n');

// Download All Titles of First Page Gigs

const h3Data = [];
document.querySelectorAll('h3').forEach(h3 => {
  const a = h3.querySelector('a');
  if (a) {
    const text = a.textContent;
    h3Data.push(text);
  }
});

const titlesData = h3Data.map(e => e.replace(/,/g, '')).join("\n");

// Download All Tags of First Page Gigs

var gigCards = document.getElementsByClassName('gig-card-layout');
var tagsDataList = [];

for (var i = 0; i < gigCards.length; i++) {
  var innerDivs = gigCards[i].getElementsByTagName('div');
  for (var j = 0; j < innerDivs.length; j++) {
    var styleAttr = innerDivs[j].getAttribute('style');
    if (styleAttr && styleAttr.includes('margin-top: 5px;')) {
      var spanList = innerDivs[j].getElementsByTagName('span');
      var spanTextList = [];
      for (var k = 0; k < spanList.length; k++) {
        var spanText = spanList[k].textContent.trim();
        if (spanText) {
          spanTextList.push(spanText);
        }
      }
      var textData = spanTextList.join('\n');
      tagsDataList.push(textData);
    }
  }
}

const tagsData = tagsDataList.join('\n');

// Combine all data into a single CSV file

const csvData = `Top Focus Keywords\n${topTagsData}\n\nTitles\n${titlesData}\n\nTags Used by Sellers\n${tagsData}`;

// Create a new Blob object with the CSV data
const blob = new Blob([csvData], { type: 'text/csv' });

// Create a new anchor element to download the file
const downloadLink = document.createElement('a');
downloadLink.href = URL.createObjectURL(blob);
downloadLink.download = 'FQV.csv';

// Trigger the download by clicking the anchor element
downloadLink.click();
